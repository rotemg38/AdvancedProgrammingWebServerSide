// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace Repository.Migrations.Data
{
    [DbContext(typeof(DataContext2))]
    [Migration("20220622002610_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.6");

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.Property<int>("ChatId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("user1Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("user2Id")
                        .HasColumnType("TEXT");

                    b.HasKey("ChatId");

                    b.HasIndex("user1Id");

                    b.HasIndex("user2Id");

                    b.ToTable("Chat", (string)null);
                });

            modelBuilder.Entity("Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Content")
                        .HasColumnType("TEXT");

                    b.Property<string>("Created")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Sent")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Message", (string)null);
                });

            modelBuilder.Entity("Models.MsgUsers", b =>
                {
                    b.Property<int?>("ChatId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("FromId")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MsgId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ToId")
                        .HasColumnType("TEXT");

                    b.HasIndex("ChatId");

                    b.HasIndex("FromId");

                    b.HasIndex("MsgId");

                    b.HasIndex("ToId");

                    b.ToTable("MsgUsers", (string)null);
                });

            modelBuilder.Entity("Models.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Feedback")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int>("RateNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WhenCreated")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Rate", (string)null);
                });

            modelBuilder.Entity("Models.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Image")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.Property<string>("Server")
                        .HasColumnType("TEXT");

                    b.Property<string>("last")
                        .HasColumnType("TEXT");

                    b.Property<string>("lastdate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User", (string)null);
                });

            modelBuilder.Entity("Models.Chat", b =>
                {
                    b.HasOne("Models.User", "user1")
                        .WithMany()
                        .HasForeignKey("user1Id");

                    b.HasOne("Models.User", "user2")
                        .WithMany()
                        .HasForeignKey("user2Id");

                    b.Navigation("user1");

                    b.Navigation("user2");
                });

            modelBuilder.Entity("Models.MsgUsers", b =>
                {
                    b.HasOne("Models.Chat", "Chat")
                        .WithMany()
                        .HasForeignKey("ChatId");

                    b.HasOne("Models.User", "From")
                        .WithMany()
                        .HasForeignKey("FromId");

                    b.HasOne("Models.Message", "Message")
                        .WithMany()
                        .HasForeignKey("MsgId");

                    b.HasOne("Models.User", "To")
                        .WithMany()
                        .HasForeignKey("ToId");

                    b.Navigation("Chat");

                    b.Navigation("From");

                    b.Navigation("Message");

                    b.Navigation("To");
                });
#pragma warning restore 612, 618
        }
    }
}
